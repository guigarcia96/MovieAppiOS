---
format_version: '11'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: ios
workflows:
  deploy:
    description: >
      The workflow tests, builds and deploys the app using *Deploy to
      bitrise.io* step.


      For testing the *retry_on_failure* test repetition mode is enabled.


      Next steps:

      - Set up [Connecting to an Apple service with API
      key](https://devcenter.bitrise.io/en/accounts/connecting-to-services/connecting-to-an-apple-service-with-api-key.html##).

      - Or further customise code signing following our [iOS code
      signing](https://devcenter.bitrise.io/en/code-signing/ios-code-signing.html)
      guide.
    steps:
    - activate-ssh-key@4: {}
    - git-clone@6: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - xcode-test@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - test_repetition_mode: retry_on_failure
    - xcode-archive@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - distribution_method: $BITRISE_DISTRIBUTION_METHOD
        - automatic_code_signing: api-key
    - cache-push@2: {}
    - deploy-to-bitrise-io@2: {}
  primary:
    description: >
      The workflow executes the tests. The *retry_on_failure* test repetition
      mode is enabled.


      Next steps:

      - Check out [Getting started with iOS
      apps](https://devcenter.bitrise.io/en/getting-started/getting-started-with-ios-apps.html).
    steps:
    - activate-ssh-key@4: {}
    - git-clone@6: {}
    - script@1:
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # make pipelines' return status equal the last command to exit with
            a non-zero status, or zero if all commands exit successfully

            set -o pipefail

            # debug log

            set -x


            # write your script here

            git clone https://github.com/yonaskolb/XcodeGen.git

            cd XcodeGen

            make install

            cd ..

            make run


            # or run a script from your repository, like:

            # bash ./path/to/script.sh

            # not just bash, e.g.:

            # ruby ./path/to/script.rb
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - cache-pull@2: {}
    - xcode-test@4:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - test_repetition_mode: retry_on_failure
    - cache-push@2: {}
    - deploy-to-bitrise-io@2: {}
meta:
  bitrise.io:
    stack: osx-xcode-13.2.x
    machine_type_id: g2.4core
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: TheMovieApp.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: TheMovieApp
  - opts:
      is_expand: false
    BITRISE_DISTRIBUTION_METHOD: development
trigger_map:
- pull_request_target_branch: main
  workflow: primary
